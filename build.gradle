/*
 * Copyright 2021  Andrey Tolpeev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

import app.buildSrc.Config
import app.buildSrc.KmmConfig
import app.buildSrc.Libs

buildscript {

    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath Libs.Gradle.gradlePlugin
        classpath Libs.Google.googleServicesPlugin
        classpath Libs.Google.Firebase.Crashlytics.gradlePlugin
        classpath Libs.Detekt.gradlePlugin
        classpath Libs.Kotlin.Plugins.gradle
        classpath Libs.Kotlin.Plugins.serialization
        classpath Libs.Dagger.Plugins.hiltAndroid

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.google.com/'
        }
    }
}

subprojects {
    afterEvaluate { project ->
        // For Android related projects
        def isAndroid = project.hasProperty('android')
        if (isAndroid) {

            android {
                buildToolsVersion Config.buildToolsVersion
                compileSdkVersion Config.compileSdkVersion

                defaultConfig {
                    minSdkVersion Config.minSdkVersion
                    targetSdkVersion Config.targetSdkVersion
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    consumerProguardFiles "consumer-rules.pro"
                }

                buildTypes {
                    release {}
                    debug {
                        testCoverageEnabled true
                    }
                }
            }

            // For multiplatform shared libraries
            if (project.getParent().name == "shared-libraries") {
                kotlin {
                    version = KmmConfig.version
                }
            }
        }

        if (project.hasProperty('java') || isAndroid) {
            detekt {
                toolVersion = Libs.Detekt.version
                buildUponDefaultConfig = true // preconfigure defaults
                allRules = false // activate all available (even unstable) rules.
                autoCorrect = true

                reports {
                    html.enabled = true
                    // observe findings in your browser with structure and code snippets
                }
            }

            dependencies {
                detektPlugins(Libs.Detekt.Plugins.formatting)
            }

            tasks.detekt {
                jvmTarget = Libs.Detekt.jvmTarget
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
