name: CI

on:
  push:
    branches:
      - dev
  pull_request:

jobs:

  # Job to build android sources
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 8
        
    - name: Install NDK
      run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}
    
    - name: Build app and run checks
      run: ./gradlew assembleDebug testDebugUnitTest lintDebug detekt -Dorg.gradle.jvmargs=-Xmx1536m -Dorg.gradle.parallel=true -Dorg.gradle.daemon=false -Dorg.gradle.caching=false -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    
    - name: Upload build outputs
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: build-outputs
        path: app/build/outputs/

    - name: Upload reports
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: app/build/reports/

  # Job to detect iOS app changes
  detect-ios-app-changes:
    runs-on: ubuntu-latest
    outputs:
      iosApp: ${{ steps.filter.outputs.iosApp }}

    steps:

    - uses: actions/checkout@v2

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          iosApp:
            - 'iosApp/**'

  # Job to build iOS app sources
  build-ios:
    needs: detect-ios-app-changes
    if: ${{ needs.detect-ios-app-changes.outputs.iosApp == 'true' }}
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 8

    - name: Build kmm and install pods
      run: ./gradlew podInstall -Dorg.gradle.jvmargs=-Xmx1536m -Dorg.gradle.parallel=true -Dorg.gradle.daemon=false -Dorg.gradle.caching=false -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

    - name: Build iOS app
      run: cd iosApp && pod install && sh build.sh
